-- MySQL Script generated by MySQL Workbench
-- Tue Mar 14 23:14:05 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube` DEFAULT CHARACTER SET utf8 ;
USE `youtube` ;

-- -----------------------------------------------------
-- Table `youtube`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`usuario` (
  `idusuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(9) NOT NULL,
  `fecha_nacimiento` DATETIME NOT NULL,
  `sexo` ENUM("mujer", "hombre", "no Genero") NOT NULL,
  `pais` VARCHAR(25) NOT NULL,
  `codigo_postal` INT NOT NULL,
  PRIMARY KEY (`idusuario`),
  UNIQUE INDEX `idusuario_UNIQUE` (`idusuario` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`canal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`canal` (
  `idcanal` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(250) NOT NULL,
  `fecha_creacion` DATETIME NOT NULL,
  `suscriptores` INT NULL,
  `creador` INT NOT NULL,
  PRIMARY KEY (`idcanal`),
  INDEX `creador_idx` (`creador` ASC) ,
  CONSTRAINT `creador`
    FOREIGN KEY (`creador`)
    REFERENCES `youtube`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`suscriptores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`suscriptores` (
  `idsuscriptor` INT NOT NULL AUTO_INCREMENT,
  `idusuario` INT NOT NULL,
  `idcanal` INT NULL,
  PRIMARY KEY (`idsuscriptor`),
  INDEX `usuario_idx` (`idusuario` ASC) ,
  INDEX `canal_idx` (`idcanal` ASC) ,
  CONSTRAINT `usuario`
    FOREIGN KEY (`idusuario`)
    REFERENCES `youtube`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `canal`
    FOREIGN KEY (`idcanal`)
    REFERENCES `youtube`.`canal` (`idcanal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`video` (
  `idvideo` INT NOT NULL AUTO_INCREMENT,
  `duracion_video` TIME NOT NULL,
  `thumbail` VARCHAR(45) NOT NULL,
  `num_reproducciones` INT NOT NULL,
  `likes` INT NULL,
  `dislikes` INT NULL,
  `estado` ENUM("p√∫blico", "oculto", "privado") NOT NULL,
  `canal` INT NOT NULL,
  `fechaHora_publicacion` DATETIME NOT NULL,
  PRIMARY KEY (`idvideo`),
  UNIQUE INDEX `idvideo_UNIQUE` (`idvideo` ASC) ,
  INDEX `canal_idx` (`canal` ASC) ,
  CONSTRAINT `fk_canal_video`
    FOREIGN KEY (`canal`)
    REFERENCES `youtube`.`canal` (`idcanal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`etiquetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`etiquetas` (
  `idetiquetas` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idetiquetas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`like` (
  `idlike` INT NOT NULL AUTO_INCREMENT,
  `usuario` INT NOT NULL,
  `fechaHora` DATETIME NOT NULL,
  PRIMARY KEY (`idlike`),
  INDEX `usuario_idx` (`usuario` ASC) ,
  CONSTRAINT `fk_usuario`
    FOREIGN KEY (`usuario`)
    REFERENCES `youtube`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`dislike`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`dislike` (
  `iddislike` INT NOT NULL AUTO_INCREMENT,
  `usuario` INT NOT NULL,
  `fechaHora` DATETIME NOT NULL,
  PRIMARY KEY (`iddislike`),
  INDEX `usuario_idx` (`usuario` ASC) ,
  CONSTRAINT `usuario0`
    FOREIGN KEY (`usuario`)
    REFERENCES `youtube`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`comentarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`comentarios` (
  `idcomentarios` INT NOT NULL AUTO_INCREMENT,
  `usuario` INT NOT NULL,
  `texto` VARCHAR(245) NOT NULL,
  `fechaHora` DATETIME NOT NULL,
  `likes` INT NULL,
  `dislikes` INT NULL,
  `video` INT NOT NULL,
  PRIMARY KEY (`idcomentarios`),
  INDEX `usuario_idx` (`usuario` ASC) ,
  INDEX `video_idx` (`video` ASC) ,
  INDEX `like_idx` (`likes` ASC) ,
  INDEX `dislikes_idx` (`dislikes` ASC) ,
  CONSTRAINT `fk_usuario_comentarios`
    FOREIGN KEY (`usuario`)
    REFERENCES `youtube`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video`
    FOREIGN KEY (`video`)
    REFERENCES `youtube`.`video` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like`
    FOREIGN KEY (`likes`)
    REFERENCES `youtube`.`like` (`idlike`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dislikes`
    FOREIGN KEY (`dislikes`)
    REFERENCES `youtube`.`dislike` (`iddislike`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`video_has_etiquetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`video_has_etiquetas` (
  `video_idvideo` INT NOT NULL,
  `etiquetas_idetiquetas` INT NOT NULL,
  PRIMARY KEY (`video_idvideo`, `etiquetas_idetiquetas`),
  INDEX `fk_video_has_etiquetas_etiquetas1_idx` (`etiquetas_idetiquetas` ASC) ,
  INDEX `fk_video_has_etiquetas_video1_idx` (`video_idvideo` ASC) ,
  CONSTRAINT `fk_video_has_etiquetas_video1`
    FOREIGN KEY (`video_idvideo`)
    REFERENCES `youtube`.`video` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_has_etiquetas_etiquetas1`
    FOREIGN KEY (`etiquetas_idetiquetas`)
    REFERENCES `youtube`.`etiquetas` (`idetiquetas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`playlist` (
  `idplaylist` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `fecha_creacion` DATETIME NOT NULL,
  `estado` ENUM("publica", "privada") NOT NULL,
  PRIMARY KEY (`idplaylist`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`playlist_has_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`playlist_has_video` (
  `playlist_idplaylist` INT NOT NULL,
  `video_idvideo` INT NOT NULL,
  PRIMARY KEY (`playlist_idplaylist`, `video_idvideo`),
  INDEX `fk_playlist_has_video_video1_idx` (`video_idvideo` ASC) ,
  INDEX `fk_playlist_has_video_playlist1_idx` (`playlist_idplaylist` ASC) ,
  CONSTRAINT `fk_playlist_has_video_playlist1`
    FOREIGN KEY (`playlist_idplaylist`)
    REFERENCES `youtube`.`playlist` (`idplaylist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_has_video_video1`
    FOREIGN KEY (`video_idvideo`)
    REFERENCES `youtube`.`video` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
